53. Maximum Subarray

class Solution {
// create a dp array a[i] record the max sum of array end at point i
// if dp[i-1]>0 dp[i]=dp[i-1]+a[i]
// else dp[i]=a[i]
//time O(n)  space O(n)
    public int maxSubArray(int[] nums) {
        if(nums.length==0)
            return 0;
        int[] dp=new int[nums.length];
        dp[0]=nums[0];
        int max=dp[0];
        for(int i=1;i<nums.length;i++){
            if(dp[i-1]>0){
                dp[i]=dp[i-1]+nums[i];
            }
            else{
                dp[i]=nums[i];
            }
            max=Math.max(max,dp[i]);
        }
        return max;
    }
}